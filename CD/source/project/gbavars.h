/****************************************************************/
/*	File:			gbavars.h									*/
/*	Description:	Var defs for core GBA functionality			*/
/*	Last Modified:	04/19/2004									*/
/*	Author:			Dave Kahler									*/
/****************************************************************/

#include "extern.h"
#include "precomp.h"



/////////////////////////////////////////////////////
// CORE GBA VARS
/////////////////////////////////////////////////////

u16* OAMmem  		=(u16*)0x7000000;
u16* FrontBuffer 	=(u16*)0x6000000;
u16* BackBuffer		=(u16*)0x600A000;
u16* OAMData		=(u16*)0x6010000;
u16* BGPaletteMem 	=(u16*)0x5000000;
u16* OBJPaletteMem 	=(u16*)0x5000200;
volatile u16* VideoBuffer	=FrontBuffer;
u16* currentBackBuffer = BackBuffer;

int* KEYS = (int*)0x04000130;


/////////////////////////////////////////////////////
// VARIOUS GLOBALS
/////////////////////////////////////////////////////

int gUpdateDisplay = 10;
int gFlipBuffers = 1;

int gUpdateBackground = 10;

OAMEntry sprites[128];

objVisible *visibleObjs;

objData *objList;

// DEBUG
bool killDisplay=false;



int spriteVarStart;
int currentSpriteNum;

int modeWheelSprite;
int modeWheelMode=0;

int clockSpriteNum;
int clockRot=0;

const u16 *objItemPtr=obj_itemData,
	*objItemSelectPtr=obj_item_selectData,
	*npcItemPtr=npc_itemData,
	*npcItemSelectPtr=npc_item_selectData;


int helpButtonSpriteOffset;
int modeWheelSpriteOffset;
int intCurveSpriteOffset;
int objItemSpriteOffset;
int npcItemSpriteOffset;

int timeHourSpriteOffset;
int timeMinTenSpriteOffset;
int timeMinOneSpriteOffset;
int timeSecTenSpriteOffset;
int timeSecOneSpriteOffset;

int itemSelectSpriteOffset;

int leftSelectFillSprite;

int iFaceSpriteOffset;


int modeWheelAngle=60;
int modeWheelDrift=60;

int volatile keypressDelay=0;


bool isHelpSelected=false;
bool isModeWheelSelected=false;
bool isScreenSelected=false;


int helpRow=0;
int helpMode=0;
int helpDelay=0;

// itemMode:
// 0: obj
// 1: npc
int itemMode=0;


//PSSDisplay* blankDisplayP;


// current selection
// 0: main
// 1: modeWheel
// 2: items
// 3: help

int currentSelection=0;


// current mode
// 0: main
// 1: sim
// 2: items
// 3: help

int currentMode=-1;

int blankMain=1;

npcData *npcList;



int addObjLevel=0;

bool isStartup=false;

int colonSprite=0;


// universal game (up-time) timer
u32 gameTimer=0;


// npc timer
u32 npcTimer=0;


// sim timer
u32 simTimer=0;

// work area change timer
u32 workAreaTimer=0;


// num NPCs in world
int numNPCs=0;

// obj that was just deleted by disaster
int disasterObj=1;



// main select graphics (to turn on/off)
int mainSelectors[6];


// universal game pause
bool isPaused=false;


Point firstSelector,secondSelector;




/////////////////////////////////////////////////////
// TRIG LOOK-UP TABLES
/////////////////////////////////////////////////////


const s16 SIN[360] = {  0, 4, 8, 13, 17, 22, 26, 31, 35, 40,
 44, 48, 53, 57, 61, 66, 70, 74, 79, 83,
 87, 91, 95, 100, 104, 108, 112, 116, 120, 124,
 127, 131, 135, 139, 143, 146, 150, 154, 157, 161,
 164, 167, 171, 174, 177, 181, 184, 187, 190, 193,
 196, 198, 201, 204, 207, 209, 212, 214, 217, 219,
 221, 223, 226, 228, 230, 232, 233, 235, 237, 238,
 240, 242, 243, 244, 246, 247, 248, 249, 250, 251,
 252, 252, 253, 254, 254, 255, 255, 255, 255, 255,
 256, 255, 255, 255, 255, 255, 254, 254, 253, 252,
 252, 251, 250, 249, 248, 247, 246, 244, 243, 242,
 240, 238, 237, 235, 233, 232, 230, 228, 226, 223,
 221, 219, 217, 214, 212, 209, 207, 204, 201, 198,
 196, 193, 190, 187, 184, 181, 177, 174, 171, 167,
 164, 161, 157, 154, 150, 146, 143, 139, 135, 131,
 128, 124, 120, 116, 112, 108, 104, 100, 95, 91,
 87, 83, 79, 74, 70, 66, 61, 57, 53, 48,
 44, 40, 35, 31, 26, 22, 17, 13, 8, 4,
 0, -4, -8, -13, -17, -22, -26, -31, -35, -40,
 -44, -48, -53, -57, -61, -66, -70, -74, -79, -83,
 -87, -91, -95, -100, -104, -108, -112, -116, -120, -124,
 -127, -131, -135, -139, -143, -146, -150, -154, -157, -161,
 -164, -167, -171, -174, -177, -181, -184, -187, -190, -193,
 -196, -198, -201, -204, -207, -209, -212, -214, -217, -219,
 -221, -223, -226, -228, -230, -232, -233, -235, -237, -238,
 -240, -242, -243, -244, -246, -247, -248, -249, -250, -251,
 -252, -252, -253, -254, -254, -255, -255, -255, -255, -255,
 -256, -255, -255, -255, -255, -255, -254, -254, -253, -252,
 -252, -251, -250, -249, -248, -247, -246, -244, -243, -242,
 -240, -238, -237, -235, -233, -232, -230, -228, -226, -223,
 -221, -219, -217, -214, -212, -209, -207, -204, -201, -198,
 -196, -193, -190, -187, -184, -181, -177, -174, -171, -167,
 -164, -161, -157, -154, -150, -146, -143, -139, -135, -131,
 -128, -124, -120, -116, -112, -108, -104, -100, -95, -91,
 -87, -83, -79, -74, -70, -66, -61, -57, -53, -48,
 -44, -40, -35, -31, -26, -22, -17, -13, -8, -4  };

const s16 COS[360] = {  256, 255, 255, 255, 255, 255, 254, 254, 253, 252,
 252, 251, 250, 249, 248, 247, 246, 244, 243, 242,
 240, 238, 237, 235, 233, 232, 230, 228, 226, 223,
 221, 219, 217, 214, 212, 209, 207, 204, 201, 198,
 196, 193, 190, 187, 184, 181, 177, 174, 171, 167,
 164, 161, 157, 154, 150, 146, 143, 139, 135, 131,
 128, 124, 120, 116, 112, 108, 104, 100, 95, 91,
 87, 83, 79, 74, 70, 66, 61, 57, 53, 48,
 44, 40, 35, 31, 26, 22, 17, 13, 8, 4,
 0, -4, -8, -13, -17, -22, -26, -31, -35, -40,
 -44, -48, -53, -57, -61, -66, -70, -74, -79, -83,
 -87, -91, -95, -100, -104, -108, -112, -116, -120, -124,
 -127, -131, -135, -139, -143, -146, -150, -154, -157, -161,
 -164, -167, -171, -174, -177, -181, -184, -187, -190, -193,
 -196, -198, -201, -204, -207, -209, -212, -214, -217, -219,
 -221, -223, -226, -228, -230, -232, -233, -235, -237, -238,
 -240, -242, -243, -244, -246, -247, -248, -249, -250, -251,
 -252, -252, -253, -254, -254, -255, -255, -255, -255, -255,
 -256, -255, -255, -255, -255, -255, -254, -254, -253, -252,
 -252, -251, -250, -249, -248, -247, -246, -244, -243, -242,
 -240, -238, -237, -235, -233, -232, -230, -228, -226, -223,
 -221, -219, -217, -214, -212, -209, -207, -204, -201, -198,
 -196, -193, -190, -187, -184, -181, -177, -174, -171, -167,
 -164, -161, -157, -154, -150, -146, -143, -139, -135, -131,
 -128, -124, -120, -116, -112, -108, -104, -100, -95, -91,
 -87, -83, -79, -74, -70, -66, -61, -57, -53, -48,
 -44, -40, -35, -31, -26, -22, -17, -13, -8, -4,
 0, 4, 8, 13, 17, 22, 26, 31, 35, 40,
 44, 48, 53, 57, 61, 66, 70, 74, 79, 83,
 87, 91, 95, 100, 104, 108, 112, 116, 120, 124,
 127, 131, 135, 139, 143, 146, 150, 154, 157, 161,
 164, 167, 171, 174, 177, 181, 184, 187, 190, 193,
 196, 198, 201, 204, 207, 209, 212, 214, 217, 219,
 221, 223, 226, 228, 230, 232, 233, 235, 237, 238,
 240, 242, 243, 244, 246, 247, 248, 249, 250, 251,
 252, 252, 253, 254, 254, 255, 255, 255, 255, 255  };

pRotData rotData = (pRotData)sprites;
